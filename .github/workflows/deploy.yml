name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Backend tests
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
    
    - name: Install backend dependencies
      run: |
        cd backend
        poetry install
    
    - name: Run backend tests
      run: |
        cd backend
        poetry run pytest
    
    - name: Run backend linting
      run: |
        cd backend
        poetry run ruff check .
    
    # Frontend tests
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run
    
    - name: Run frontend linting
      run: |
        cd frontend
        npm run lint
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_KEY }}
        script: |
          cd /srv/partle
          git pull origin main
          
          # Update backend
          cd /srv/partle/backend
          poetry install --no-interaction
          sudo systemctl restart partle-backend
          
          # Update frontend
          cd /srv/partle/frontend
          npm ci
          npm run build
          
          # Reload nginx
          sudo nginx -t && sudo systemctl reload nginx
          
          # Verify deployment
          sleep 5
          curl -f http://localhost:8000/health || exit 1
          echo "ðŸš€ Deployment completed successfully!"